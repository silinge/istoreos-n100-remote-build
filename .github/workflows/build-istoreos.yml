name: Build iStoreOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache build dependencies
      uses: actions/cache@v4
      with:
        path: |
          istoreos/dl
          istoreos/staging_dir
        key: ${{ runner.os }}-istoreos-cache-${{ hashFiles('feeds.conf') }}
        restore-keys: |
          ${{ runner.os }}-istoreos-cache-

    - name: Remove existing istoreos directory if it exists
      run: rm -rf istoreos

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gcc g++ make git unzip libncurses5-dev zlib1g-dev

    - name: Clone iStoreOS
      run: |
        git clone --depth=1 -b istoreos-24.10 https://github.com/istoreos/istoreos.git istoreos

    - name: Update feeds
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cp feeds.conf istoreos/
        cd istoreos
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configure
      run: |
        cd istoreos
        make defconfig
        echo "CONFIG_TARGET_x86_64=y" >> .config
        echo "CONFIG_TARGET_x86_64_Generic=y" >> .config
        echo "CONFIG_PACKAGE_kmod-rtw8852be=y" >> .config
        echo "CONFIG_TARGET_ROOTFS_PARTSIZE=50" >> .config
        echo "CONFIG_TARGET_IMAGES_GPT_PARTED='set 1 msdos 1'" >> .config
        echo "CONFIG_TARGET_IMAGES_GPT_PARTED_SIZE=2000" >> .config
        echo "CONFIG_TARGET_IMAGES_EXT4=y" >> .config
        echo "CONFIG_TARGET_IMAGES_EFI=y" >> .config

    - name: Compile the firmware
      id: compile
      run: |
        cd istoreos
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@v4
      if: steps.compile.outputs.status == 'success'
      with:
        name: iStoreOS_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: istoreos/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        cd istoreos/bin/targets/x86/64/
        if [ -d "$PWD" ]; then
          rm -rf packages
          rm -rf *.buildinfo
          rm -rf sha256sums
          rm -rf *.manifest
          rm -rf *kernel.bin
          rm -rf *.itb
          rm -rf *.json
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "Directory does not exist"
          echo "status=failure" >> $GITHUB_OUTPUT
        fi

    - name: Upload firmware directory
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success'
      with:
        name: iStoreOS_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
